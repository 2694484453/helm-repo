{{- if .Values.ingress.enabled | default false }}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ template "yun-app.fullname" . }}
  labels:
  {{- include "yun-app.selectorLabels" . | nindent 2 }}
  {{- with .Values.ingress.annotations }}
    annotations:
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  rules:
    {{- range $k,$v := .Values.ingress.hosts }}
    - host: {{ $v.host }}
      http:
        paths:
          {{- range $k,$v := $v.paths }}
          - path: {{ $v.path }}
            backend:
              serviceName: {{ template "yun-app.fullname" . }}
              servicePort: 80
          {{- end }}
    {{- end }}
{{- end }}
